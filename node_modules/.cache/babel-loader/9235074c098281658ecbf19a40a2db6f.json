{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useRef } from \"react\";\nexport var useDrag = function useDrag(_ref) {\n  var onDragStart = _ref.onDragStart,\n      onDrag = _ref.onDrag,\n      onDragEnd = _ref.onDragEnd;\n  var containerRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMousePressed = _useState4[0],\n      setMousePressed = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mousePos = _useState6[0],\n      setMousePos = _useState6[1];\n\n  var onMouseDown = function onMouseDown(e) {\n    setMousePressed(true);\n    setMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    if (!startPos) return;\n    var bbox = containerRef.current.getBoundingClientRect();\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n\n    if (startPos && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  var mouseup = function mouseup(e) {\n    if (!isDragging || !startPos) return;\n    var bbox = containerRef.current.getBoundingClientRect();\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n    setStartPos(null);\n    setMousePos(null);\n    setIsDragging(false);\n    onDragEnd(event);\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"mouseup\", mouseup);\n    return function () {\n      return document.removeEventListener(\"mouseup\", mouseup);\n    };\n  });\n  return {\n    ref: containerRef,\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove\n  };\n};","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/hooks/mouse.ts"],"names":["useState","useEffect","useRef","useDrag","onDragStart","onDrag","onDragEnd","containerRef","isDragging","setIsDragging","isMousePressed","setMousePressed","mousePos","setMousePos","onMouseDown","e","x","clientX","y","clientY","onMouseMove","startPos","bbox","current","getBoundingClientRect","event","left","top","deltaX","deltaY","clientStartPos","mouseup","setStartPos","document","addEventListener","removeEventListener","ref"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\ntype point = {\n  x: number;\n  y: number;\n};\n\ntype useDragProps = {\n  onDragStart: (e: React.MouseEvent) => void;\n  onDrag: (e: React.MouseEvent) => void;\n  onDragEnd: (e: React.MouseEvent) => void;\n};\n\nexport const useDrag = ({ onDragStart, onDrag, onDragEnd }: useDragProps) => {\n  let containerRef = useRef<Element>(null);\n  let [isDragging, setIsDragging] = useState(false);\n  let [isMousePressed, setMousePressed] = useState(false);\n  let [mousePos, setMousePos] = useState<point | null>(null);\n\n  const onMouseDown = (e: React.MouseEvent<any>) => {\n    setMousePressed(true);\n    setMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onMouseMove = (e: React.MouseEvent<any>) => {\n    if (!startPos) return;\n    const bbox = (containerRef.current as Element).getBoundingClientRect();\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n\n    if (startPos && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  const mouseup = (e: MouseEvent) => {\n    if (!isDragging || !startPos) return;\n    const bbox = (containerRef.current as Element).getBoundingClientRect();\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n    setStartPos(null);\n    setMousePos(null);\n    setIsDragging(false);\n    onDragEnd(event);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", mouseup);\n    return () => document.removeEventListener(\"mouseup\", mouseup);\n  });\n\n  return {\n    ref: containerRef,\n    onMouseDown,\n    onMouseMove\n  };\n};\n"]},"metadata":{},"sourceType":"module"}