{"ast":null,"code":"import _toConsumableArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/components/ReportEditor/ReportEditor.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"react-emotion\";\nimport { report, newSlide as _newSlide } from \"../../models/reports\";\nimport { column } from \"../../styles\";\nimport { SlideEditor } from \"./SlideEditor\";\nimport SlideList from \"./SlideList\";\n\nvar ReportEditor = function ReportEditor(props) {\n  var currentSlide = props.report.slides.find(function (s) {\n    return s.id === props.slideId;\n  }) || props.report.slides[0];\n\n  var _useState = useState({\n    report: props.report,\n    currentSlideId: currentSlide.id,\n    selection: {\n      type: \"None\"\n    },\n    showTemplates: false,\n    unsavedChanges: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var report = state.report;\n\n  var updateReport = function updateReport(report) {\n    setState(_objectSpread({}, state, {\n      report: report\n    }));\n    props.updateReport(report);\n  };\n\n  var deselect = function deselect() {\n    return setState(_objectSpread({}, state, {\n      selection: {\n        type: \"None\"\n      }\n    }));\n  };\n\n  var updateSelection = function updateSelection(selection) {\n    setState(_objectSpread({}, state, {\n      selection: selection\n    }));\n  };\n\n  var addSlide = function addSlide(slide) {\n    updateReport(_objectSpread({}, report, {\n      slides: _toConsumableArray(report.slides).concat([slide])\n    }));\n  };\n\n  var updateSlide = function updateSlide(slide) {\n    updateReport(_objectSpread({}, report, {\n      slides: report.slides.map(function (s) {\n        return s.id === slide.id ? slide : s;\n      })\n    }));\n  };\n\n  var selectedSlide = report.slides.find(function (s) {\n    return s.id === state.currentSlideId;\n  });\n  return React.createElement(Main, {\n    style: state.showTemplates ? {\n      display: \"none\"\n    } : {},\n    onMouseDown: deselect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(SlideList, {\n    currentSlideId: state.currentSlideId,\n    slides: report.slides,\n    selection: state.selection,\n    selectSlide: function selectSlide(slide) {\n      setState(_objectSpread({}, state, {\n        selection: {\n          type: \"Slide\",\n          slideId: slide.id\n        },\n        currentSlideId: slide.id\n      }));\n    },\n    newSlide: function newSlide() {\n      return addSlide(_newSlide());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Stage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, selectedSlide && React.createElement(SlideEditor, {\n    slide: selectedSlide,\n    selection: state.selection,\n    updateSlide: updateSlide,\n    updateSelection: updateSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nexport default ReportEditor;\nvar Main =\n/*#__PURE__*/\nstyled(\"main\", {\n  label: \"Main\",\n  target: \"evjv7fn0\"\n})(\"height:100%;display:grid;grid-template-columns:300px auto;padding:0 30px;grid-column-gap:30px;min-height:0;\");\nvar Stage =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Stage\",\n  target: \"evjv7fn1\"\n})(\"flex:1;\", column, \";box-sizing:border-box;padding:30px 0;align-items:center;overflow:visible;\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/ReportEditor/ReportEditor.tsx"],"names":["React","useState","styled","report","newSlide","column","SlideEditor","SlideList","ReportEditor","props","currentSlide","slides","find","s","id","slideId","currentSlideId","selection","type","showTemplates","unsavedChanges","state","setState","updateReport","deselect","updateSelection","addSlide","slide","updateSlide","map","selectedSlide","display","Main","Stage"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from \"react\";\nimport styled from \"react-emotion\";\nimport { report, slide, newSlide } from \"../../models/reports\";\nimport { column } from \"../../styles\";\nimport { SlideEditor } from \"./SlideEditor\";\nimport { editorSelection } from \"../../models/editorSelection\";\nimport SlideList from \"./SlideList\";\n\ntype Props = {\n  report: report;\n  slideId: string | null;\n  updateReport: (report: report) => void;\n};\n\ntype State = {\n  report: report;\n  currentSlideId: string;\n  selection: editorSelection;\n  showTemplates: boolean;\n  unsavedChanges: boolean;\n};\n\nconst ReportEditor = (props: Props) => {\n  const currentSlide =\n    props.report.slides.find((s) => s.id === props.slideId) ||\n    props.report.slides[0];\n\n  const [state, setState] = useState<State>({\n    report: props.report,\n    currentSlideId: currentSlide.id,\n    selection: { type: \"None\" },\n    showTemplates: false,\n    unsavedChanges: false\n  });\n\n  const { report } = state;\n\n  const updateReport = (report: report) => {\n    setState({ ...state, report });\n    props.updateReport(report);\n  };\n\n  const deselect = () => setState({ ...state, selection: { type: \"None\" } });\n\n  const updateSelection = (selection: editorSelection) => {\n    setState({ ...state, selection });\n  };\n\n  const addSlide = (slide: slide) => {\n    updateReport({ ...report, slides: [...report.slides, slide] });\n  };\n\n  const updateSlide = (slide: slide) => {\n    updateReport({\n      ...report,\n      slides: report.slides.map((s: slide) => (s.id === slide.id ? slide : s))\n    });\n  };\n\n  const selectedSlide = report.slides.find(\n    (s: slide) => s.id === state.currentSlideId\n  );\n  return (\n    <Main\n      style={state.showTemplates ? { display: \"none\" } : {}}\n      onMouseDown={deselect}\n    >\n      <SlideList\n        currentSlideId={state.currentSlideId}\n        slides={report.slides}\n        selection={state.selection}\n        selectSlide={(slide: slide) => {\n          setState({\n            ...state,\n            selection: { type: \"Slide\", slideId: slide.id },\n            currentSlideId: slide.id\n          });\n        }}\n        newSlide={() => addSlide(newSlide())}\n      />\n      <Stage>\n        {selectedSlide && (\n          <SlideEditor\n            slide={selectedSlide}\n            selection={state.selection}\n            updateSlide={updateSlide}\n            updateSelection={updateSelection}\n          />\n        )}\n      </Stage>\n    </Main>\n  );\n};\nexport default ReportEditor;\n\nconst Main = styled.main`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 300px auto;\n  padding: 0 30px;\n  grid-column-gap: 30px;\n  min-height: 0;\n`;\n\nconst Stage = styled.div`\n  flex: 1;\n  ${column};\n  box-sizing: border-box;\n  padding: 30px 0;\n  align-items: center;\n  overflow: visible;\n`;\n"]},"metadata":{},"sourceType":"module"}