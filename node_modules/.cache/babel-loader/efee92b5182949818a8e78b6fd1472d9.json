{"ast":null,"code":"var _jsxFileName = \"/Users/andreas/code/reports/app/src/components/ReportEditor/SlideList.tsx\";\nimport React from \"react\";\nimport { column, columnSpacing } from \"../../styles\";\nimport styled from \"react-emotion\";\nimport Slide from \"../Slide\";\nimport { Button } from \"../Button\";\nexport default (function (props) {\n  return React.createElement(Aside, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.slides.map(function (slide) {\n    return React.createElement(Slide, {\n      key: slide.id,\n      onClick: function onClick() {\n        return props.selectSlide(slide);\n      },\n      active: props.currentSlideId === slide.id,\n      highlight: props.selection.type === \"Slide\" && slide.id === props.selection.slideId,\n      slide: slide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }), React.createElement(Button, {\n    onClick: props.newSlide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" ADD SLIDE \"));\n});\nvar Aside =\n/*#__PURE__*/\nstyled(\"aside\", {\n  label: \"Aside\",\n  target: \"euu07qd0\"\n})(column, \";\", columnSpacing(15), \";padding:30px;box-sizing:border-box;overflow:auto;&::-webkit-scrollbar{width:0px;background:transparent;}\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/ReportEditor/SlideList.tsx"],"names":["React","column","columnSpacing","styled","Slide","Button","props","slides","map","slide","id","selectSlide","currentSlideId","selection","type","slideId","newSlide","Aside"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,cAAtC;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAGA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AASA,gBAAe,UAACC,KAAD;AAAA,SACb,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD;AAAA,WAChB,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMJ,KAAK,CAACK,WAAN,CAAkBF,KAAlB,CAAN;AAAA,OAFX;AAGE,MAAA,MAAM,EAAEH,KAAK,CAACM,cAAN,KAAyBH,KAAK,CAACC,EAHzC;AAIE,MAAA,SAAS,EACPJ,KAAK,CAACO,SAAN,CAAgBC,IAAhB,KAAyB,OAAzB,IACAL,KAAK,CAACC,EAAN,KAAaJ,KAAK,CAACO,SAAN,CAAgBE,OANjC;AAQE,MAAA,KAAK,EAAEN,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAjB,CADH,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACU,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF,CADa;AAAA,CAAf;AAkBA,IAAMC,KAAK;AAAA;AAAGd,MAAH;AAAA;AAAA;AAAA,GACPF,MADO,OAEPC,aAAa,CAAC,EAAD,CAFN,8GAAX","sourcesContent":["import React from \"react\";\nimport { column, columnSpacing } from \"../../styles\";\nimport { slide } from \"../../models/reports\";\nimport styled from \"react-emotion\";\nimport { editorSelection } from \"../../models/editorSelection\";\n\nimport Slide from \"../Slide\";\nimport { Button } from \"../Button\";\ntype Props = {\n  selection: editorSelection;\n  currentSlideId: string;\n  slides: slide[];\n  selectSlide: (slide: slide) => void;\n  newSlide: () => void;\n};\n\nexport default (props: Props) => (\n  <Aside>\n    {props.slides.map((slide: slide) => (\n      <Slide\n        key={slide.id}\n        onClick={() => props.selectSlide(slide)}\n        active={props.currentSlideId === slide.id}\n        highlight={\n          props.selection.type === \"Slide\" &&\n          slide.id === props.selection.slideId\n        }\n        slide={slide}\n      />\n    ))}\n    <Button onClick={props.newSlide}> ADD SLIDE </Button>\n  </Aside>\n);\n\nconst Aside = styled.aside`\n  ${column};\n  ${columnSpacing(15)};\n  padding: 30px;\n  box-sizing: border-box;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0px; /* remove scrollbar space */\n    background: transparent; /* optional: just make scrollbar invisible */\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}