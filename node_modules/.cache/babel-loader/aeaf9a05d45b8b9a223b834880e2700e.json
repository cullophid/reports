{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/pages/ReportEditorPage.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateReport($report: ReportUpdate!) {\\n    updateReport(report: $report) \", \"\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query FetchReport($reportId: ID!) {\\n    report(id: $reportId) \", \"\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport styled from \"react-emotion\";\nimport Menu from \"../components/Menu\";\nimport gql from \"graphql-tag\";\nimport ReportEditor from \"../components/ReportEditor/ReportEditor\";\nimport { Spinner } from \"../components/Spinner\";\nimport { cleanReport, reportQuery } from \"../models/reports\";\nimport { debounce } from \"../util\";\nimport { useQuery, useMutation } from \"../hooks\";\nvar FETCH_REPORT = gql(_templateObject(), reportQuery);\nvar UPDATE_REPORT = gql(_templateObject2(), reportQuery);\n\nvar ReportEditorPage = function ReportEditorPage(props) {\n  var reportId = props.reportId,\n      slideId = props.slideId;\n  var reportResult = useQuery({\n    query: FETCH_REPORT,\n    variables: {\n      reportId: reportId\n    }\n  });\n  var report = reportResult.status === \"Ready\" && reportResult.data.report;\n\n  var _useMutation = useMutation({\n    mutation: UPDATE_REPORT\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateReport = _useMutation2[0],\n      updateReportResult = _useMutation2[1];\n\n  var saveReport = debounce(function (report) {\n    return updateReport({\n      report: cleanReport(report)\n    });\n  }, 500);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, updateReportResult.status === \"Loading\" && React.createElement(Saving, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), reportResult.status === \"Loading\" && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), report && React.createElement(ReportEditor, {\n    report: report,\n    slideId: slideId,\n    updateReport: saveReport,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default ReportEditorPage;\nvar Page =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Page\",\n  target: \"eudslye0\"\n})(\"background:#eee;height:100vh;padding-top:80px;\");\nvar Saving =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Saving\",\n  target: \"eudslye1\"\n})(\"position:fixed;top:40px;right:40px;display:flex;align-items:center;justify-content:center;\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/pages/ReportEditorPage.tsx"],"names":["React","styled","Menu","gql","ReportEditor","Spinner","cleanReport","reportQuery","debounce","useQuery","useMutation","FETCH_REPORT","UPDATE_REPORT","ReportEditorPage","props","reportId","slideId","reportResult","query","variables","report","status","data","mutation","updateReport","updateReportResult","saveReport","Page","Saving"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAkC,eAAlC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAAiBC,WAAjB,EAA8BC,WAA9B,QAAiD,mBAAjD;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC;AAEA,IAAMC,YAAY,GAAGR,GAAH,oBAEUI,WAFV,CAAlB;AAMA,IAAMK,aAAa,GAAGT,GAAH,qBAEiBI,WAFjB,CAAnB;;AAWA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkB;AAAA,MACjCC,QADiC,GACXD,KADW,CACjCC,QADiC;AAAA,MACvBC,OADuB,GACXF,KADW,CACvBE,OADuB;AAEzC,MAAMC,YAAY,GAAGR,QAAQ,CAAqB;AAChDS,IAAAA,KAAK,EAAEP,YADyC;AAEhDQ,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,QAAQ,EAARA;AAAF;AAFqC,GAArB,CAA7B;AAIA,MAAMK,MAAM,GAAGH,YAAY,CAACI,MAAb,KAAwB,OAAxB,IAAmCJ,YAAY,CAACK,IAAb,CAAkBF,MAApE;;AANyC,qBAOEV,WAAW,CAGpD;AACAa,IAAAA,QAAQ,EAAEX;AADV,GAHoD,CAPb;AAAA;AAAA,MAOlCY,YAPkC;AAAA,MAOpBC,kBAPoB;;AAazC,MAAMC,UAAU,GAAGlB,QAAQ,CACzB,UAACY,MAAD;AAAA,WAAoBI,YAAY,CAAC;AAAEJ,MAAAA,MAAM,EAAEd,WAAW,CAACc,MAAD;AAArB,KAAD,CAAhC;AAAA,GADyB,EAEzB,GAFyB,CAA3B;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,kBAAkB,CAACJ,MAAnB,KAA8B,SAA9B,IACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,YAAY,CAACI,MAAb,KAAwB,SAAxB,IAAqC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxC,EAGGD,MAAM,IACL,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,YAAY,EAAEU,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANF,CADF;AAoBD,CArCD;;AAsCA,eAAeb,gBAAf;AAEA,IAAMc,IAAI;AAAA;AAAG1B,MAAH;AAAA;AAAA;AAAA,oDAAV;AAMA,IAAM2B,MAAM;AAAA;AAAG3B,MAAH;AAAA;AAAA;AAAA,gGAAZ","sourcesContent":["import * as React from \"react\";\nimport styled, { keyframes } from \"react-emotion\";\nimport Menu from \"../components/Menu\";\nimport gql from \"graphql-tag\";\nimport ReportEditor from \"../components/ReportEditor/ReportEditor\";\nimport { Spinner } from \"../components/Spinner\";\nimport { report, cleanReport, reportQuery } from \"../models/reports\";\nimport { debounce } from \"../util\";\nimport { useQuery, useMutation } from \"../hooks\";\n\nconst FETCH_REPORT = gql`\n  query FetchReport($reportId: ID!) {\n    report(id: $reportId) ${reportQuery}\n  }\n`;\n\nconst UPDATE_REPORT = gql`\n  mutation UpdateReport($report: ReportUpdate!) {\n    updateReport(report: $report) ${reportQuery}\n  }\n`;\n\ntype Props = {\n  reportId: string;\n  slideId: string | null;\n};\n\nconst ReportEditorPage = (props: Props) => {\n  const { reportId, slideId } = props;\n  const reportResult = useQuery<{ report: report }>({\n    query: FETCH_REPORT,\n    variables: { reportId }\n  });\n  const report = reportResult.status === \"Ready\" && reportResult.data.report;\n  const [updateReport, updateReportResult] = useMutation<\n    { updateReport: report },\n    { report: report }\n  >({\n    mutation: UPDATE_REPORT\n  });\n  const saveReport = debounce(\n    (report: report) => updateReport({ report: cleanReport(report) }),\n    500\n  );\n  return (\n    <React.Fragment>\n      {updateReportResult.status === \"Loading\" && (\n        <Saving>\n          <Spinner />\n        </Saving>\n      )}\n      <Page>\n        <Menu />\n        {reportResult.status === \"Loading\" && <Spinner />}\n        {report && (\n          <ReportEditor\n            report={report}\n            slideId={slideId}\n            updateReport={saveReport}\n          />\n        )}\n      </Page>\n    </React.Fragment>\n  );\n};\nexport default ReportEditorPage;\n\nconst Page = styled.div`\n  background: #eee;\n  height: 100vh;\n  padding-top: 80px;\n`;\n\nconst Saving = styled.div`\n  position: fixed;\n  top: 40px;\n  right: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n"]},"metadata":{},"sourceType":"module"}