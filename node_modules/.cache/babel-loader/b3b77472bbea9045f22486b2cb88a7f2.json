{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useDrag = function useDrag(_ref) {\n  var onDragStart = _ref.onDragStart,\n      onDrag = _ref.onDrag,\n      onDragEnd = _ref.onDragEnd;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMousePressed = _useState4[0],\n      setMousePressed = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mousePos = _useState6[0],\n      setMousePos = _useState6[1];\n\n  var onMouseDown = function onMouseDown(e) {\n    setMousePressed(true);\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    if (!isMousePressed) return;\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n\n    if (startPos && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  var mouseup = function mouseup(e) {\n    if (!isDragging || !startPos) return;\n    var bbox = containerRef.current.getBoundingClientRect();\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n    setStartPos(null);\n    setMousePos(null);\n    setIsDragging(false);\n    onDragEnd(event);\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"mouseup\", mouseup);\n    return function () {\n      return document.removeEventListener(\"mouseup\", mouseup);\n    };\n  });\n  return {\n    ref: containerRef,\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove\n  };\n};","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/hooks/mouse.ts"],"names":["useState","useEffect","useDrag","onDragStart","onDrag","onDragEnd","isDragging","setIsDragging","isMousePressed","setMousePressed","mousePos","setMousePos","onMouseDown","e","onMouseMove","event","clientX","clientY","x","bbox","left","y","top","deltaX","deltaY","clientStartPos","startPos","mouseup","containerRef","current","getBoundingClientRect","setStartPos","document","addEventListener","removeEventListener","ref"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\ntype point = {\n  x: number;\n  y: number;\n};\n\ntype useDragProps = {\n  onDragStart: (e: React.MouseEvent) => void;\n  onDrag: (e: React.MouseEvent) => void;\n  onDragEnd: (e: React.MouseEvent) => void;\n};\n\nexport const useDrag = ({ onDragStart, onDrag, onDragEnd }: useDragProps) => {\n  let [isDragging, setIsDragging] = useState(false);\n  let [isMousePressed, setMousePressed] = useState(false);\n  let [mousePos, setMousePos] = useState<point | null>(null);\n\n  const onMouseDown = (e: React.MouseEvent<any>) => {\n    setMousePressed(true);\n  };\n\n  const onMouseMove = (e: React.MouseEvent<any>) => {\n    if (!isMousePressed) return;\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n\n    if (startPos && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  const mouseup = (e: MouseEvent) => {\n    if (!isDragging || !startPos) return;\n    const bbox = (containerRef.current as Element).getBoundingClientRect();\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y,\n      clientStartPos: startPos,\n      startPos: {\n        x: startPos.x - bbox.left,\n        y: startPos.y - bbox.top\n      }\n    };\n    setStartPos(null);\n    setMousePos(null);\n    setIsDragging(false);\n    onDragEnd(event);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", mouseup);\n    return () => document.removeEventListener(\"mouseup\", mouseup);\n  });\n\n  return {\n    ref: containerRef,\n    onMouseDown,\n    onMouseMove\n  };\n};\n"]},"metadata":{},"sourceType":"module"}