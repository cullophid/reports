{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/components/AutoScale.tsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nvar AutoScale = function AutoScale(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      scale = _useState2[0],\n      setScale = _useState2[1];\n\n  var wrapperRef = useRef(null);\n\n  var calculateScale = function calculateScale() {\n    window.requestAnimationFrame(function () {\n      if (wrapperRef.current === null) throw new Error(\"Cound not find wrapper\");\n\n      var _wrapperRef$current$g = wrapperRef.current.getBoundingClientRect(),\n          width = _wrapperRef$current$g.width;\n\n      setScale(width / props.width);\n    });\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", calculateScale);\n    calculateScale();\n    return function () {\n      return window.removeEventListener(\"resize\", calculateScale);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    style: props.style || {\n      width: \"100%\",\n      overflowX: \"visible\"\n    },\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, scale !== null && props.render(scale));\n};\n\nexport default AutoScale;","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/AutoScale.tsx"],"names":["React","useState","useRef","useEffect","AutoScale","props","scale","setScale","wrapperRef","calculateScale","window","requestAnimationFrame","current","Error","getBoundingClientRect","width","addEventListener","removeEventListener","style","overflowX","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAkB;AAAA,kBACRJ,QAAQ,CAAgB,IAAhB,CADA;AAAA;AAAA,MAC3BK,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,UAAU,GAAGN,MAAM,CAAiB,IAAjB,CAAzB;;AAEA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BC,IAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAM;AACjC,UAAIH,UAAU,CAACI,OAAX,KAAuB,IAA3B,EACE,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;;AAF+B,kCAGjBL,UAAU,CAACI,OAAX,CAAmBE,qBAAnB,EAHiB;AAAA,UAG3BC,KAH2B,yBAG3BA,KAH2B;;AAIjCR,MAAAA,QAAQ,CAACQ,KAAK,GAAGV,KAAK,CAACU,KAAf,CAAR;AACD,KALD;AAMD,GAPD;;AASAZ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,cAAlC;AACAA,IAAAA,cAAc;AACd,WAAO;AAAA,aAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,cAArC,CAAN;AAAA,KAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACa,KAAN,IAAe;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBI,MAAAA,SAAS,EAAE;AAA5B,KADxB;AAEE,IAAA,GAAG,EAAEX,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,KAAK,KAAK,IAAV,IAAkBD,KAAK,CAACe,MAAN,CAAad,KAAb,CAJrB,CADF;AAQD,CA3BD;;AA6BA,eAAeF,SAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\ntype props = {\n  width: number;\n  style?: any;\n  render: (scale: number) => React.ReactChild;\n};\n\ntype state = {\n  scale: number | null;\n};\n\nconst AutoScale = (props: props) => {\n  const [scale, setScale] = useState<number | null>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const calculateScale = () => {\n    window.requestAnimationFrame(() => {\n      if (wrapperRef.current === null)\n        throw new Error(\"Cound not find wrapper\");\n      let { width } = wrapperRef.current.getBoundingClientRect();\n      setScale(width / props.width);\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", calculateScale);\n    calculateScale();\n    return () => window.removeEventListener(\"resize\", calculateScale);\n  }, []);\n\n  return (\n    <div\n      style={props.style || { width: \"100%\", overflowX: \"visible\" }}\n      ref={wrapperRef}\n    >\n      {scale !== null && props.render(scale)}\n    </div>\n  );\n};\n\nexport default AutoScale;\n"]},"metadata":{},"sourceType":"module"}