{"ast":null,"code":"import _objectSpread from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/components/ReportEditor/TextElement.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"react-emotion\";\nimport { textElement } from \"../../models/reports\";\nimport * as Theme from \"../../theme\";\nimport TextEditor from \"../TextEditor\";\nimport { DragHandle } from \"../DragHandle\";\nexport var TextElement = function TextElement(props) {\n  var _useState = useState({\n    pressed: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onDragStart = function onDragStart(e) {\n    setState({\n      pressed: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n  };\n\n  var onDrag = function onDrag(e) {\n    var textElement = props.textElement,\n        scale = props.scale,\n        onUpdate = props.onUpdate,\n        edit = props.edit;\n    var pressed = state.pressed;\n    if (!pressed || edit) return;\n    var x = (e.clientX - pressed.x) / scale;\n    var y = (e.clientY - pressed.y) / scale;\n    onUpdate(_objectSpread({}, textElement, {\n      x: textElement.x + x,\n      y: textElement.y + y\n    }));\n    setState({\n      pressed: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n  };\n\n  var onDragEnd = function onDragEnd() {\n    setState({\n      pressed: null\n    });\n    props.onClick && props.onclick();\n  }; // const onMouseDown = (e: React.MouseEvent) => {\n  //   const { scale, onClick, edit } = props;\n  //   e.stopPropagation();\n  //   if (edit) return;\n  //   setState({\n  //     pressed: {\n  //       x: e.clientX,\n  //       y: e.clientY\n  //     }\n  //   });\n  //   onClick && onClick();\n  // };\n  // const onMouseMove = (e: React.MouseEvent) => {\n  //   const { textElement, scale, onUpdate, edit } = props;\n  //   const { pressed } = state;\n  //   if (!pressed || edit) return;\n  //   const x = (e.clientX - pressed.x) / scale;\n  //   const y = (e.clientY - pressed.y) / scale;\n  //   onUpdate({\n  //     ...textElement,\n  //     x: textElement.x + x,\n  //     y: textElement.y + y\n  //   });\n  //   setState({\n  //     pressed: {\n  //       x: e.clientX,\n  //       y: e.clientY\n  //     }\n  //   });\n  // };\n  // useEffect(() => {\n  //   document.addEventListener(\"mouseup\", onMouseUp);\n  //   return () => document.removeEventListener(\"mouseup\", onMouseUp);\n  // });\n\n\n  var textElement = props.textElement,\n      scale = props.scale;\n  return React.createElement(BoundingBox, {\n    style: {\n      left: textElement.x,\n      top: textElement.y,\n      width: textElement.width,\n      border: props.edit ? \"1px dashed \".concat(Theme.primary) : props.selected ? \"1px solid \".concat(Theme.primary) : \"1px solid transparent\"\n    },\n    key: textElement.id,\n    onDoubleClick: props.onDoubleClick,\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.edit ? React.createElement(Text, {\n    style: {\n      fontSize: textElement.text.fontSize,\n      textAlign: textElement.text.align.toLowerCase()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TextEditor, {\n    defaultValue: textElement.text.value,\n    onSave: function onSave(value) {\n      return props.onUpdate(_objectSpread({}, textElement, {\n        text: _objectSpread({}, textElement.text, {\n          value: value\n        })\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })) : React.createElement(Text, {\n    style: {\n      fontSize: textElement.text.fontSize,\n      textAlign: textElement.text.align.toLowerCase(),\n      border: \"1px solid \".concat(props.selected ? Theme.primary : \"transparent\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, textElement.text.value), props.selected && !props.edit && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(DragHandle, {\n    onDrag: function onDrag(_ref) {\n      var x = _ref.x,\n          y = _ref.y;\n      props.onUpdate(_objectSpread({}, textElement, {\n        x: textElement.x + x / scale,\n        width: textElement.width - x / scale\n      }));\n    },\n    style: {\n      left: 0,\n      top: \"50%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(DragHandle, {\n    onDrag: function onDrag(_ref2) {\n      var x = _ref2.x;\n      props.onUpdate(_objectSpread({}, textElement, {\n        width: Math.max(1, textElement.width + x / scale)\n      }));\n    },\n    style: {\n      top: \"50%\",\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })));\n};\nvar BoundingBox =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"BoundingBox\",\n  target: \"e10ondmu0\"\n})(\"position:absolute;\");\nvar Text =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Text\",\n  target: \"e10ondmu1\"\n})(\"cursor:pointer;margin:0;font-family:\\\"Montserrat\\\",sans-serif;border:1px solid transparent;background:none;border:none;width:100%;min-height:20px;&:focus{outline:none;}\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/ReportEditor/TextElement.tsx"],"names":["React","useState","styled","textElement","Theme","TextEditor","DragHandle","TextElement","props","pressed","state","setState","onDragStart","e","x","clientX","y","clientY","onDrag","scale","onUpdate","edit","onDragEnd","onClick","onclick","left","top","width","border","primary","selected","id","onDoubleClick","onMouseDown","onMouseMove","fontSize","text","textAlign","align","toLowerCase","value","Math","max","right","BoundingBox","Text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AA6BA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAkB;AAAA,kBACjBP,QAAQ,CAAQ;AAAEQ,IAAAA,OAAO,EAAE;AAAX,GAAR,CADS;AAAA;AAAA,MACpCC,KADoC;AAAA,MAC7BC,QAD6B;;AAE3C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAmB;AACrCF,IAAAA,QAAQ,CAAC;AACPF,MAAAA,OAAO,EAAE;AACPK,QAAAA,CAAC,EAAED,CAAC,CAACE,OADE;AAEPC,QAAAA,CAAC,EAAEH,CAAC,CAACI;AAFE;AADF,KAAD,CAAR;AAMD,GAPD;;AAQA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,CAAD,EAAmB;AAAA,QACxBV,WADwB,GACeK,KADf,CACxBL,WADwB;AAAA,QACXgB,KADW,GACeX,KADf,CACXW,KADW;AAAA,QACJC,QADI,GACeZ,KADf,CACJY,QADI;AAAA,QACMC,IADN,GACeb,KADf,CACMa,IADN;AAAA,QAExBZ,OAFwB,GAEZC,KAFY,CAExBD,OAFwB;AAIhC,QAAI,CAACA,OAAD,IAAYY,IAAhB,EAAsB;AAEtB,QAAMP,CAAC,GAAG,CAACD,CAAC,CAACE,OAAF,GAAYN,OAAO,CAACK,CAArB,IAA0BK,KAApC;AACA,QAAMH,CAAC,GAAG,CAACH,CAAC,CAACI,OAAF,GAAYR,OAAO,CAACO,CAArB,IAA0BG,KAApC;AACAC,IAAAA,QAAQ,mBACHjB,WADG;AAENW,MAAAA,CAAC,EAAEX,WAAW,CAACW,CAAZ,GAAgBA,CAFb;AAGNE,MAAAA,CAAC,EAAEb,WAAW,CAACa,CAAZ,GAAgBA;AAHb,OAAR;AAKAL,IAAAA,QAAQ,CAAC;AACPF,MAAAA,OAAO,EAAE;AACPK,QAAAA,CAAC,EAAED,CAAC,CAACE,OADE;AAEPC,QAAAA,CAAC,EAAEH,CAAC,CAACI;AAFE;AADF,KAAD,CAAR;AAMD,GAnBD;;AAoBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBX,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAR;AACAD,IAAAA,KAAK,CAACe,OAAN,IAAiBf,KAAK,CAACgB,OAAN,EAAjB;AACD,GAHD,CA9B2C,CAmC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAtE2C,MAwEnCrB,WAxEmC,GAwEZK,KAxEY,CAwEnCL,WAxEmC;AAAA,MAwEtBgB,KAxEsB,GAwEZX,KAxEY,CAwEtBW,KAxEsB;AAyE3C,SACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,IAAI,EAAEtB,WAAW,CAACW,CADb;AAELY,MAAAA,GAAG,EAAEvB,WAAW,CAACa,CAFZ;AAGLW,MAAAA,KAAK,EAAExB,WAAW,CAACwB,KAHd;AAILC,MAAAA,MAAM,EAAEpB,KAAK,CAACa,IAAN,wBACUjB,KAAK,CAACyB,OADhB,IAEJrB,KAAK,CAACsB,QAAN,uBACa1B,KAAK,CAACyB,OADnB,IAEA;AARC,KADT;AAWE,IAAA,GAAG,EAAE1B,WAAW,CAAC4B,EAXnB;AAYE,IAAA,aAAa,EAAEvB,KAAK,CAACwB,aAZvB;AAaE,IAAA,WAAW,EAAEC,WAbf;AAcE,IAAA,WAAW,EAAEC,WAdf;AAeE,IAAA,OAAO,EAAE1B,KAAK,CAACe,OAfjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGf,KAAK,CAACa,IAAN,GACC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA,QAAQ,EAAEhC,WAAW,CAACiC,IAAZ,CAAiBD,QADtB;AAELE,MAAAA,SAAS,EAAElC,WAAW,CAACiC,IAAZ,CAAiBE,KAAjB,CAAuBC,WAAvB;AAFN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEpC,WAAW,CAACiC,IAAZ,CAAiBI,KADjC;AAEE,IAAA,MAAM,EAAE,gBAACA,KAAD;AAAA,aACNhC,KAAK,CAACY,QAAN,mBACKjB,WADL;AAEEiC,QAAAA,IAAI,oBAAOjC,WAAW,CAACiC,IAAnB;AAAyBI,UAAAA,KAAK,EAALA;AAAzB;AAFN,SADM;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,GAkBC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,QAAQ,EAAEhC,WAAW,CAACiC,IAAZ,CAAiBD,QADtB;AAELE,MAAAA,SAAS,EAAElC,WAAW,CAACiC,IAAZ,CAAiBE,KAAjB,CAAuBC,WAAvB,EAFN;AAGLX,MAAAA,MAAM,sBACJpB,KAAK,CAACsB,QAAN,GAAiB1B,KAAK,CAACyB,OAAvB,GAAiC,aAD7B;AAHD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG1B,WAAW,CAACiC,IAAZ,CAAiBI,KATpB,CAnCJ,EA+CGhC,KAAK,CAACsB,QAAN,IAAkB,CAACtB,KAAK,CAACa,IAAzB,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE,sBAAc;AAAA,UAAXP,CAAW,QAAXA,CAAW;AAAA,UAARE,CAAQ,QAARA,CAAQ;AACpBR,MAAAA,KAAK,CAACY,QAAN,mBACKjB,WADL;AAEEW,QAAAA,CAAC,EAAEX,WAAW,CAACW,CAAZ,GAAgBA,CAAC,GAAGK,KAFzB;AAGEQ,QAAAA,KAAK,EAAExB,WAAW,CAACwB,KAAZ,GAAoBb,CAAC,GAAGK;AAHjC;AAKD,KAPH;AAQE,IAAA,KAAK,EAAE;AACLM,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,GAAG,EAAE;AAFA,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE,uBAAW;AAAA,UAARZ,CAAQ,SAARA,CAAQ;AACjBN,MAAAA,KAAK,CAACY,QAAN,mBACKjB,WADL;AAEEwB,QAAAA,KAAK,EAAEc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYvC,WAAW,CAACwB,KAAZ,GAAoBb,CAAC,GAAGK,KAApC;AAFT;AAID,KANH;AAOE,IAAA,KAAK,EAAE;AACLO,MAAAA,GAAG,EAAE,KADA;AAELiB,MAAAA,KAAK,EAAE;AAFF,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAhDJ,CADF;AA+ED,CAxJM;AA0JP,IAAMC,WAAW;AAAA;AAAG1C,MAAH;AAAA;AAAA;AAAA,wBAAjB;AAIA,IAAM2C,IAAI;AAAA;AAAG3C,MAAH;AAAA;AAAA;AAAA,8KAAV","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"react-emotion\";\nimport { textElement } from \"../../models/reports\";\nimport * as Theme from \"../../theme\";\nimport TextEditor from \"../TextEditor\";\nimport { DragHandle } from \"../DragHandle\";\n\ntype pos = {\n  x: number;\n  y: number;\n};\n\ntype BoundingBox = {\n  selected: boolean;\n  edit: boolean;\n  width: number;\n  x: number;\n  y: number;\n};\n\ntype props = {\n  scale: number;\n  textElement: textElement;\n  selected: boolean;\n  edit: boolean;\n  onUpdate: (element: textElement) => void;\n  onClick: () => void;\n  onDoubleClick: () => void;\n};\n\ntype state = {\n  pressed: { x: number; y: number } | null;\n};\n\nexport const TextElement = (props: props) => {\n  const [state, setState] = useState<state>({ pressed: null });\n  const onDragStart = (e: MouseEvent) => {\n    setState({\n      pressed: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n  };\n  const onDrag = (e: MouseEvent) => {\n    const { textElement, scale, onUpdate, edit } = props;\n    const { pressed } = state;\n\n    if (!pressed || edit) return;\n\n    const x = (e.clientX - pressed.x) / scale;\n    const y = (e.clientY - pressed.y) / scale;\n    onUpdate({\n      ...textElement,\n      x: textElement.x + x,\n      y: textElement.y + y\n    });\n    setState({\n      pressed: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n  };\n  const onDragEnd = () => {\n    setState({ pressed: null });\n    props.onClick && props.onclick();\n  };\n\n  // const onMouseDown = (e: React.MouseEvent) => {\n  //   const { scale, onClick, edit } = props;\n  //   e.stopPropagation();\n  //   if (edit) return;\n  //   setState({\n  //     pressed: {\n  //       x: e.clientX,\n  //       y: e.clientY\n  //     }\n  //   });\n  //   onClick && onClick();\n  // };\n\n  // const onMouseMove = (e: React.MouseEvent) => {\n  //   const { textElement, scale, onUpdate, edit } = props;\n  //   const { pressed } = state;\n  //   if (!pressed || edit) return;\n  //   const x = (e.clientX - pressed.x) / scale;\n  //   const y = (e.clientY - pressed.y) / scale;\n  //   onUpdate({\n  //     ...textElement,\n  //     x: textElement.x + x,\n  //     y: textElement.y + y\n  //   });\n  //   setState({\n  //     pressed: {\n  //       x: e.clientX,\n  //       y: e.clientY\n  //     }\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   document.addEventListener(\"mouseup\", onMouseUp);\n  //   return () => document.removeEventListener(\"mouseup\", onMouseUp);\n  // });\n\n  const { textElement, scale } = props;\n  return (\n    <BoundingBox\n      style={{\n        left: textElement.x,\n        top: textElement.y,\n        width: textElement.width,\n        border: props.edit\n          ? `1px dashed ${Theme.primary}`\n          : props.selected\n          ? `1px solid ${Theme.primary}`\n          : \"1px solid transparent\"\n      }}\n      key={textElement.id}\n      onDoubleClick={props.onDoubleClick}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onClick={props.onClick}\n    >\n      {props.edit ? (\n        <Text\n          style={{\n            fontSize: textElement.text.fontSize,\n            textAlign: textElement.text.align.toLowerCase() as any\n          }}\n        >\n          <TextEditor\n            defaultValue={textElement.text.value}\n            onSave={(value) =>\n              props.onUpdate({\n                ...textElement,\n                text: { ...textElement.text, value }\n              })\n            }\n          />\n        </Text>\n      ) : (\n        <Text\n          style={{\n            fontSize: textElement.text.fontSize,\n            textAlign: textElement.text.align.toLowerCase() as any,\n            border: `1px solid ${\n              props.selected ? Theme.primary : \"transparent\"\n            }`\n          }}\n        >\n          {textElement.text.value}\n        </Text>\n      )}\n      {props.selected && !props.edit && (\n        <React.Fragment>\n          <DragHandle\n            onDrag={({ x, y }) => {\n              props.onUpdate({\n                ...textElement,\n                x: textElement.x + x / scale,\n                width: textElement.width - x / scale\n              });\n            }}\n            style={{\n              left: 0,\n              top: \"50%\"\n            }}\n          />\n          <DragHandle\n            onDrag={({ x }) => {\n              props.onUpdate({\n                ...textElement,\n                width: Math.max(1, textElement.width + x / scale)\n              });\n            }}\n            style={{\n              top: \"50%\",\n              right: 0\n            }}\n          />\n        </React.Fragment>\n      )}\n    </BoundingBox>\n  );\n};\n\nconst BoundingBox = styled.div`\n  position: absolute;\n`;\n\nconst Text = styled.div`\n  cursor: pointer;\n  margin: 0;\n  font-family: \"Montserrat\", sans-serif;\n  border: 1px solid transparent;\n  background: none;\n  border: none;\n  width: 100%;\n  min-height: 20px;\n  &:focus {\n    outline: none;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}