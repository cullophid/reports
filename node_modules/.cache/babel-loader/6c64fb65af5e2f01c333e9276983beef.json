{"ast":null,"code":"var _jsxFileName = \"/Users/andreas/code/reports/app/src/components/Slide.tsx\";\nimport * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { slide } from \"../models/reports\";\nimport AutoScale from \"./AutoScale\";\nimport * as Theme from \"../theme\";\n\nvar textAlign = function textAlign(align) {\n  switch (align) {\n    case \"Right\":\n      return \"right\";\n\n    case \"Center\":\n      return \"center\";\n\n    case \"Justify\":\n      return \"justify\";\n\n    default:\n      return \"left\";\n  }\n};\n\nvar TextElement = function TextElement(props) {\n  var style = {};\n  return React.createElement(Text, {\n    style: {\n      left: props.x,\n      top: props.y,\n      width: props.width,\n      fontSize: props.text.fontSize,\n      textAlign: textAlign(props.text.align)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.text.value);\n};\n\nvar Slide = function Slide(props) {\n  return React.createElement(AutoScale, {\n    style: {\n      width: props.width,\n      height: props.height\n    },\n    width: 800,\n    render: function render(scale) {\n      return React.createElement(\"div\", {\n        style: {\n          width: 800 * scale,\n          height: 450 * scale,\n          overflow: \"visible\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(SlideBackground, Object.assign({}, props, {\n        onClick: function onClick() {\n          return props.onClick && props.onClick(props.slide);\n        },\n        style: {\n          transform: \"scale(\".concat(scale)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, props.slide.elements.map(function (elem, i) {\n        switch (elem.type) {\n          case \"text\":\n            return React.createElement(TextElement, Object.assign({\n              key: i\n            }, elem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }));\n\n          case \"chart\":\n            return React.createElement(ChartElement, Object.assign({\n              key: i\n            }, elem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }));\n        }\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n};\n\nexport default Slide;\nvar SlideBackground =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"SlideBackground\",\n  target: \"exdav4p0\"\n})(\"position:relative;background:white;overflow:hidden;box-shadow:\", function (props) {\n  return props.active ? \"0 10px 20px rgba(0, 0, 0, 0.4)\" : \"0 3px 10px rgba(0, 0, 0, 0.4)\";\n}, \";border:5px solid transparent;border-color:\", function (props) {\n  return props.highlight ? Theme.primary : \"transparent\";\n}, \";transform-origin:top left;width:800px;height:450px;\");\nvar Text =\n/*#__PURE__*/\nstyled(\"span\", {\n  label: \"Text\",\n  target: \"exdav4p1\"\n})(\"position:absolute;display:block;color:black;text-decoration:none;\");\n\nvar ChartElement = function ChartElement(props) {\n  return null;\n};","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/Slide.tsx"],"names":["React","styled","slide","AutoScale","Theme","textAlign","align","TextElement","props","style","left","x","top","y","width","fontSize","text","value","Slide","height","scale","overflow","onClick","transform","elements","map","elem","i","type","SlideBackground","active","highlight","primary","Text","ChartElement"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { slide, textElement, chartElement } from \"../models/reports\";\nimport AutoScale from \"./AutoScale\";\nimport * as Theme from \"../theme\";\n\ntype TextAlign = \"left\" | \"center\" | \"right\" | \"justify\";\n\nconst textAlign = (align: string): TextAlign => {\n  switch (align) {\n    case \"Right\":\n      return \"right\";\n    case \"Center\":\n      return \"center\";\n    case \"Justify\":\n      return \"justify\";\n    default:\n      return \"left\";\n  }\n};\n\ntype TextElementProps = textElement;\n\nconst TextElement = (props: TextElementProps) => {\n  const style = {};\n  return (\n    <Text\n      style={{\n        left: props.x,\n        top: props.y,\n        width: props.width,\n        fontSize: props.text.fontSize,\n        textAlign: textAlign(props.text.align)\n      }}\n    >\n      {props.text.value}\n    </Text>\n  );\n};\n\ntype Props = {\n  slide: slide;\n  active?: boolean;\n  highlight?: boolean;\n  width?: number;\n  height?: number;\n  onClick?: (slide: slide) => void;\n};\n\nconst Slide = (props: Props) => {\n  return (\n    <AutoScale\n      style={{ width: props.width, height: props.height }}\n      width={800}\n      render={(scale) => (\n        <div\n          style={{\n            width: 800 * scale,\n            height: 450 * scale,\n            overflow: \"visible\"\n          }}\n        >\n          <SlideBackground\n            {...props}\n            onClick={() => props.onClick && props.onClick(props.slide)}\n            style={{\n              transform: `scale(${scale}`\n            }}\n          >\n            <React.Fragment>\n              {props.slide.elements.map((elem, i) => {\n                switch (elem.type) {\n                  case \"text\":\n                    return <TextElement key={i} {...elem} />;\n                  case \"chart\":\n                    return <ChartElement key={i} {...elem} />;\n                }\n              })}\n            </React.Fragment>\n          </SlideBackground>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Slide;\n\nconst SlideBackground = styled.div<{\n  active?: boolean;\n  highlight?: boolean;\n}>`\n  position: relative;\n  background: white;\n  overflow: hidden;\n  box-shadow: ${(props) =>\n    props.active\n      ? \"0 10px 20px rgba(0, 0, 0, 0.4)\"\n      : \"0 3px 10px rgba(0, 0, 0, 0.4)\"};\n  border: 5px solid transparent;\n  border-color: ${(props) => (props.highlight ? Theme.primary : \"transparent\")};\n  transform-origin: top left;\n  width: 800px;\n  height: 450px;\n`;\n\nconst Text = styled.span`\n  position: absolute;\n  display: block;\n  color: black;\n  text-decoration: none;\n`;\n\nconst ChartElement = (props: chartElement) => null;\n"]},"metadata":{},"sourceType":"module"}