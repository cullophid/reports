{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useRef } from \"react\";\nexport var useDrag = function useDrag(_ref) {\n  var onDragStart = _ref.onDragStart,\n      onDrag = _ref.onDrag,\n      onDragEnd = _ref.onDragEnd;\n  var containerRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startPos = _useState4[0],\n      setStartPos = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mousePos = _useState6[0],\n      setMousePos = _useState6[1];\n\n  var onMouseDown = function onMouseDown(e) {\n    setMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setStartPos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    if (!startPos) return;\n    var bbox = containerRef.current.getBoundingClientRect();\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y\n    };\n\n    if (isMouseDown && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  var mouseup = function mouseup(e) {\n    var bbox = containerRef.current.getBoundingClientRect();\n    var event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - mousePos.x,\n      deltaY: e.clientY - mousePos.y\n    };\n    setIsMouseDown(false);\n    setIsDragging(false);\n    setMousePos(null);\n    if (!isDragging) return;\n    onDragEnd(event);\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"mouseup\", mouseup);\n    return function () {\n      return document.removeEventListener(\"mouseup\", mouseup);\n    };\n  });\n  return {\n    ref: containerRef,\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove\n  };\n};","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/hooks/mouse.ts"],"names":["useState","useEffect","useRef","useDrag","onDragStart","onDrag","onDragEnd","containerRef","isDragging","setIsDragging","startPos","setStartPos","mousePos","setMousePos","onMouseDown","e","x","clientX","y","clientY","onMouseMove","bbox","current","getBoundingClientRect","event","left","top","deltaX","deltaY","isMouseDown","mouseup","setIsMouseDown","document","addEventListener","removeEventListener","ref"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\ntype point = {\n  x: number;\n  y: number;\n};\n\ntype useDragProps = {\n  onDragStart: (e: MouseDragEvent) => void;\n  onDrag: (e: MouseDragEvent) => void;\n  onDragEnd: (e: MouseDragEvent) => void;\n};\n\nexport type MouseDragEvent = {\n  clientX: number;\n  clientY: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  deltaY: number;\n};\n\nexport const useDrag = ({ onDragStart, onDrag, onDragEnd }: useDragProps) => {\n  let containerRef = useRef<Element>(null);\n  let [isDragging, setIsDragging] = useState(false);\n  let [startPos, setStartPos] = useState<point | null>(null);\n  let [mousePos, setMousePos] = useState<point | null>(null);\n\n  const onMouseDown = (e: React.MouseEvent<any>) => {\n    setMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setStartPos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onMouseMove = (e: React.MouseEvent<any>) => {\n    if (!startPos) return;\n    const bbox = (containerRef.current as Element).getBoundingClientRect();\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y\n    };\n\n    if (isMouseDown && !isDragging) {\n      onDragStart(event);\n    }\n\n    onDrag(event);\n  };\n\n  const mouseup = (e: MouseEvent) => {\n    const bbox = (containerRef.current as Element).getBoundingClientRect();\n    const event = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n      x: e.clientX - bbox.left,\n      y: e.clientY - bbox.top,\n      deltaX: e.clientX - (mousePos as point).x,\n      deltaY: e.clientY - (mousePos as point).y\n    };\n    setIsMouseDown(false);\n    setIsDragging(false);\n    setMousePos(null);\n    if (!isDragging) return;\n    onDragEnd(event);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", mouseup);\n    return () => document.removeEventListener(\"mouseup\", mouseup);\n  });\n\n  return {\n    ref: containerRef,\n    onMouseDown,\n    onMouseMove\n  };\n};\n"]},"metadata":{},"sourceType":"module"}