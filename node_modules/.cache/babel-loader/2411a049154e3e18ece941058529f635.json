{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/pages/ReportsPage.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    createReport(title: \\\"Untitled\\\") \", \"\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    reports \", \"\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport styled from \"react-emotion\";\nimport Menu from \"../components/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { reportQuery } from \"../models/reports\";\nimport { Spinner } from \"../components/Spinner\";\nimport { Redirect } from \"react-router\";\nimport gql from \"graphql-tag\";\nimport Slide from \"../components/Slide\";\nimport plus from \"../plus.svg\";\nimport { center } from \"../styles\";\nimport { useQuery, useMutation } from \"../hooks\";\nvar FETCH_REPORTS = gql(_templateObject(), reportQuery);\n\nvar ReportsList = function ReportsList() {\n  var result = useQuery({\n    query: FETCH_REPORTS\n  });\n\n  switch (result.status) {\n    case \"Loading\":\n      return React.createElement(Spinner, {\n        size: 24,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n\n    case \"Error\":\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" Could not fetch reports\");\n\n    case \"Ready\":\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(NewReport, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), result.data.reports.map(function (report) {\n        return React.createElement(Link, {\n          to: \"/reports/\".concat(report.id),\n          key: report.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Tile, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Slide, {\n          slide: report.slides[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })));\n      }));\n  }\n};\n\nvar CREATE_REPORT = gql(_templateObject2(), reportQuery);\n\nvar NewReport = function NewReport() {\n  var _useMutation = useMutation({\n    mutation: CREATE_REPORT,\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: FETCH_REPORTS\n      }];\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      create = _useMutation2[0],\n      result = _useMutation2[1];\n\n  switch (result.status) {\n    case \"Ready\":\n      return React.createElement(Redirect, {\n        push: true,\n        to: \"/reports/\".concat(result.data.createReport.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n\n    case \"Error\":\n      console.log(result.error);\n\n    default:\n      return React.createElement(Tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NewButton, {\n        onClick: function onClick() {\n          return create({});\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: 50\n        },\n        src: plus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n  }\n};\n\nvar ReportsPage = function ReportsPage() {\n  return React.createElement(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(ReportsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nexport default ReportsPage;\nvar Page =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Page\",\n  target: \"e1plbfw90\"\n})(\"display:flex;min-height:100vh;flex-direction:column;align-items:stretch;background:#eee;\");\nvar Main =\n/*#__PURE__*/\nstyled(\"main\", {\n  label: \"Main\",\n  target: \"e1plbfw91\"\n})(\"flex:1;padding:80px;display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;\");\nvar Tile =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Tile\",\n  target: \"e1plbfw92\"\n})(\"margin:15px;width:228px;height:128.25px;\");\nvar NewButton =\n/*#__PURE__*/\nstyled(\"button\", {\n  label: \"NewButton\",\n  target: \"e1plbfw93\"\n})(center, \";width:100%;height:100%;box-sizing:border-box;border:8px dashed #88bc32;\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/pages/ReportsPage.tsx"],"names":["React","styled","Menu","Link","reportQuery","Spinner","Redirect","gql","Slide","center","useQuery","useMutation","FETCH_REPORTS","ReportsList","result","query","status","data","reports","map","report","id","slides","CREATE_REPORT","NewReport","mutation","refetchQueries","create","createReport","console","log","error","height","plus","ReportsPage","Page","Main","Tile","NewButton"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport Menu from \"../components/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { report, reportQuery } from \"../models/reports\";\nimport { Spinner } from \"../components/Spinner\";\nimport { Redirect } from \"react-router\";\nimport * as Remote from \"../models/remote\";\nimport gql from \"graphql-tag\";\nimport Slide from \"../components/Slide\";\nimport plus from \"../plus.svg\";\nimport { center } from \"../styles\";\nimport { useQuery, useMutation } from \"../hooks\";\n\ntype State = {\n  reports: Remote.t<report[], string>;\n};\n\nconst FETCH_REPORTS = gql`\n  {\n    reports ${reportQuery}\n  }\n`;\n\nconst ReportsList = () => {\n  const result = useQuery<{ reports: report[] }>({ query: FETCH_REPORTS });\n  switch (result.status) {\n    case \"Loading\":\n      return <Spinner size={24} color=\"primary\" />;\n    case \"Error\":\n      return <p> Could not fetch reports</p>;\n    case \"Ready\":\n      return (\n        <React.Fragment>\n          <NewReport />\n          {result.data.reports.map((report: report) => (\n            <Link to={`/reports/${report.id}`} key={report.id}>\n              <Tile>\n                <Slide slide={report.slides[0]} />\n              </Tile>\n            </Link>\n          ))}\n        </React.Fragment>\n      );\n  }\n};\n\nconst CREATE_REPORT = gql`\n  mutation {\n    createReport(title: \"Untitled\") ${reportQuery}\n  }\n`;\n\nconst NewReport = () => {\n  const [create, result] = useMutation<{ createReport: report }, {}>({\n    mutation: CREATE_REPORT,\n    refetchQueries: () => [{ query: FETCH_REPORTS }]\n  });\n  switch (result.status) {\n    case \"Ready\":\n      return <Redirect push to={`/reports/${result.data.createReport.id}`} />;\n    case \"Error\":\n      console.log(result.error);\n    default:\n      return (\n        <Tile>\n          <NewButton onClick={() => create({})}>\n            <img style={{ height: 50 }} src={plus} />\n          </NewButton>\n        </Tile>\n      );\n  }\n};\n\nconst ReportsPage = () => {\n  return (\n    <Page>\n      <Menu />\n      <Main>\n        <ReportsList />\n      </Main>\n    </Page>\n  );\n};\n\nexport default ReportsPage;\n\nconst Page = styled.div`\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n  align-items: stretch;\n  background: #eee;\n`;\nconst Main = styled.main`\n  flex: 1;\n  padding: 80px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nconst Tile = styled.div`\n  margin: 15px;\n  width: 228px;\n  height: 128.25px;\n`;\n\nconst NewButton = styled.button`\n  ${center};\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  border: 8px dashed #88bc32;\n`;\n"]},"metadata":{},"sourceType":"module"}