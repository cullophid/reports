{"ast":null,"code":"import _slicedToArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useDrag = function useDrag(_ref) {\n  var onDragStart = _ref.onDragStart,\n      onDrag = _ref.onDrag,\n      onDragEnd = _ref.onDragEnd;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMouseDown = _useState2[0],\n      setIsMouseDown = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDragging = _useState4[0],\n      setIsDragging = _useState4[1];\n\n  var mouseup = function mouseup(e) {\n    setIsMouseDown(false);\n    setIsDragging(false);\n    if (!isDragging) return;\n    onDragEnd(e);\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"mouseup\", mouseup);\n    return function () {\n      return document.removeEventListener(\"mouseup\", mouseup);\n    };\n  });\n  return {\n    onMouseDown: function onMouseDown(e) {\n      setIsMouseDown(true);\n    },\n    onMouseMove: function onMouseMove(e) {\n      if (!isMouseDown) return;\n\n      if (isMouseDown && !isDragging) {\n        onDragStart(e);\n      }\n\n      onDrag(e);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/hooks/mouse.ts"],"names":["useState","useEffect","useDrag","onDragStart","onDrag","onDragEnd","isMouseDown","setIsMouseDown","isDragging","setIsDragging","mouseup","e","document","addEventListener","removeEventListener","onMouseDown","onMouseMove"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAQA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAsD;AAAA,MAAnDC,WAAmD,QAAnDA,WAAmD;AAAA,MAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;;AAAA,kBACvCL,QAAQ,CAAC,KAAD,CAD+B;AAAA;AAAA,MACtEM,WADsE;AAAA,MACzDC,cADyD;;AAAA,mBAEzCP,QAAQ,CAAC,KAAD,CAFiC;AAAA;AAAA,MAEtEQ,UAFsE;AAAA,MAE1DC,aAF0D;;AAI3E,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAmB;AACjCJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,QAAI,CAACD,UAAL,EAAiB;AACjBH,IAAAA,SAAS,CAACM,CAAD,CAAT;AACD,GALD;;AAOAV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,OAArC;AACA,WAAO;AAAA,aAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,OAAxC,CAAN;AAAA,KAAP;AACD,GAHQ,CAAT;AAKA,SAAO;AACLK,IAAAA,WAAW,EAAE,qBAACJ,CAAD,EAA8B;AACzCJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAHI;AAILS,IAAAA,WAAW,EAAE,qBAACL,CAAD,EAAmB;AAC9B,UAAI,CAACL,WAAL,EAAkB;;AAClB,UAAIA,WAAW,IAAI,CAACE,UAApB,EAAgC;AAC9BL,QAAAA,WAAW,CAACQ,CAAD,CAAX;AACD;;AACDP,MAAAA,MAAM,CAACO,CAAD,CAAN;AACD;AAVI,GAAP;AAYD,CA5BM","sourcesContent":["import { useState, useEffect } from \"react\";\n\ntype useDragProps = {\n  onDragStart: (e: MouseEvent) => void;\n  onDrag: (e: MouseEvent) => void;\n  onDragEnd: (e: MouseEvent) => void;\n};\n\nexport const useDrag = ({ onDragStart, onDrag, onDragEnd }: useDragProps) => {\n  let [isMouseDown, setIsMouseDown] = useState(false);\n  let [isDragging, setIsDragging] = useState(false);\n\n  const mouseup = (e: MouseEvent) => {\n    setIsMouseDown(false);\n    setIsDragging(false);\n    if (!isDragging) return;\n    onDragEnd(e);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", mouseup);\n    return () => document.removeEventListener(\"mouseup\", mouseup);\n  });\n\n  return {\n    onMouseDown: (e: React.MouseEvent<any>) => {\n      setIsMouseDown(true);\n    },\n    onMouseMove: (e: MouseEvent) => {\n      if (!isMouseDown) return;\n      if (isMouseDown && !isDragging) {\n        onDragStart(e);\n      }\n      onDrag(e);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}