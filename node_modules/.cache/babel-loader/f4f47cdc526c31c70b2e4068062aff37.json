{"ast":null,"code":"import _toConsumableArray from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andreas/code/reports/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/andreas/code/reports/app/src/components/ReportEditor/SlideEditor.tsx\";\nimport * as React from \"react\";\nimport styled from \"react-emotion\";\nimport AutoScale from \"../AutoScale\";\nimport { TextElement } from \"./TextElement\";\nimport { ChartElement } from \"./ChartElement\";\nimport { slide, newTextElement } from \"../../models/reports\";\nexport var SlideEditor = function SlideEditor(props) {\n  var updateTextElement = function updateTextElement(elem) {\n    props.updateSlide(_objectSpread({}, props.slide, {\n      elements: props.slide.elements.map(function (t) {\n        return t.id === elem.id ? elem : t;\n      })\n    }));\n  };\n\n  var deleteSelection = function deleteSelection() {\n    var selection = props.selection,\n        slide = props.slide,\n        updateSlide = props.updateSlide;\n\n    switch (selection.type) {\n      case \"Element\":\n        updateSlide(_objectSpread({}, slide, {\n          elements: slide.elements.filter(function (t) {\n            return t.id !== selection.elementId;\n          })\n        }));\n        break;\n    }\n  };\n\n  var addTextElement = function addTextElement() {\n    var slide = props.slide,\n        updateSlide = props.updateSlide;\n    updateSlide(_objectSpread({}, slide, {\n      elements: _toConsumableArray(slide.elements).concat([newTextElement()])\n    }));\n  };\n\n  var keyDown = function keyDown(e) {\n    var selection = props.selection,\n        updateSelection = props.updateSelection;\n    var isEditing = selection.type === \"Element\" && selection.edit;\n\n    switch (e.key) {\n      case \"Backspace\":\n        if (isEditing) return;\n        deleteSelection();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n\n      case \"t\":\n        if (isEditing) return;\n        addTextElement();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n\n      case \"Escape\":\n        if (selection.type === \"Element\") {\n          selection.edit ? updateSelection(_objectSpread({}, selection, {\n            edit: false\n          })) : updateSelection({\n            type: \"Slide\",\n            slideId: props.slide.id\n          });\n          e.stopPropagation();\n          e.preventDefault();\n        }\n\n        break;\n    }\n  };\n\n  var slide = props.slide,\n      selection = props.selection,\n      updateSelection = props.updateSelection;\n  return React.createElement(AutoScale, {\n    width: 800,\n    render: function render(scale) {\n      return React.createElement(Wrapper, {\n        onKeyDown: keyDown,\n        tabIndex: 1,\n        style: {\n          width: 800 * scale,\n          height: 450 * scale\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Background, {\n        style: {\n          transform: \"scale(\".concat(scale, \")\")\n        },\n        id: \"slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, slide.elements.map(function (elem, i) {\n        switch (elem.type) {\n          case \"text\":\n            return React.createElement(TextElement, {\n              key: i,\n              scale: scale,\n              selected: selection.type === \"Element\" && selection.elementId === elem.id,\n              edit: selection.type === \"Element\" && selection.elementId === elem.id && selection.edit,\n              textElement: elem,\n              onClick: function onClick() {\n                return selection.type === \"Element\" && selection.edit || updateSelection({\n                  type: \"Element\",\n                  elementId: elem.id,\n                  edit: false\n                });\n              },\n              onDoubleClick: function onDoubleClick() {\n                return updateSelection({\n                  type: \"Element\",\n                  elementId: elem.id,\n                  edit: true\n                });\n              },\n              onUpdate: updateTextElement,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            });\n\n          case \"chart\":\n            return React.createElement(ChartElement, Object.assign({\n              key: i\n            }, elem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }));\n        }\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  });\n};\nvar Wrapper =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Wrapper\",\n  target: \"e1m5450u0\"\n})(\"overflow:visible;&:focus{outline:none;}\");\nvar Background =\n/*#__PURE__*/\nstyled(\"div\", {\n  label: \"Background\",\n  target: \"e1m5450u1\"\n})(\"user-select:none;position:relative;background:white;transform-origin:top left;width:800px;height:450px;box-shadow:0 10px 30px rgba(0,0,0,0.4);\");","map":{"version":3,"sources":["/Users/andreas/code/reports/app/src/components/ReportEditor/SlideEditor.tsx"],"names":["React","styled","AutoScale","TextElement","ChartElement","slide","newTextElement","SlideEditor","props","updateTextElement","elem","updateSlide","elements","map","t","id","deleteSelection","selection","type","filter","elementId","addTextElement","keyDown","e","updateSelection","isEditing","edit","key","stopPropagation","preventDefault","slideId","scale","width","height","transform","i","Wrapper","Background"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport AutoScale from \"../AutoScale\";\nimport { TextElement } from \"./TextElement\";\nimport { ChartElement } from \"./ChartElement\";\nimport { slide, slideElement, newTextElement } from \"../../models/reports\";\nimport { editorSelection } from \"../../models/editorSelection\";\n\ntype props = {\n  slide: slide;\n  selection: editorSelection;\n  updateSelection: (selection: editorSelection) => void;\n  updateSlide: (slide: slide) => void;\n};\n\nexport const SlideEditor = (props: props) => {\n  const updateTextElement = (elem: slideElement) => {\n    props.updateSlide({\n      ...props.slide,\n      elements: props.slide.elements.map((t) => (t.id === elem.id ? elem : t))\n    });\n  };\n\n  const deleteSelection = () => {\n    const { selection, slide, updateSlide } = props;\n    switch (selection.type) {\n      case \"Element\":\n        updateSlide({\n          ...slide,\n          elements: slide.elements.filter((t) => t.id !== selection.elementId)\n        });\n        break;\n    }\n  };\n\n  const addTextElement = () => {\n    const { slide, updateSlide } = props;\n    updateSlide({\n      ...slide,\n      elements: [...slide.elements, newTextElement()]\n    });\n  };\n\n  const keyDown = (e: React.KeyboardEvent) => {\n    const { selection, updateSelection } = props;\n    const isEditing = selection.type === \"Element\" && selection.edit;\n    switch (e.key) {\n      case \"Backspace\":\n        if (isEditing) return;\n        deleteSelection();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n      case \"t\":\n        if (isEditing) return;\n        addTextElement();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n      case \"Escape\":\n        if (selection.type === \"Element\") {\n          selection.edit\n            ? updateSelection({ ...selection, edit: false })\n            : updateSelection({ type: \"Slide\", slideId: props.slide.id });\n          e.stopPropagation();\n          e.preventDefault();\n        }\n        break;\n    }\n  };\n\n  const { slide, selection, updateSelection } = props;\n  return (\n    <AutoScale\n      width={800}\n      render={(scale) => (\n        <Wrapper\n          onKeyDown={keyDown}\n          tabIndex={1}\n          style={{\n            width: 800 * scale,\n            height: 450 * scale\n          }}\n        >\n          <Background style={{ transform: `scale(${scale})` }} id=\"slide\">\n            <React.Fragment>\n              {slide.elements.map((elem, i) => {\n                switch (elem.type) {\n                  case \"text\":\n                    return (\n                      <TextElement\n                        key={i}\n                        scale={scale}\n                        selected={\n                          selection.type === \"Element\" &&\n                          selection.elementId === elem.id\n                        }\n                        edit={\n                          selection.type === \"Element\" &&\n                          selection.elementId === elem.id &&\n                          selection.edit\n                        }\n                        textElement={elem}\n                        onClick={() =>\n                          (selection.type === \"Element\" && selection.edit) ||\n                          updateSelection({\n                            type: \"Element\",\n                            elementId: elem.id,\n                            edit: false\n                          })\n                        }\n                        onDoubleClick={() =>\n                          updateSelection({\n                            type: \"Element\",\n                            elementId: elem.id,\n                            edit: true\n                          })\n                        }\n                        onUpdate={updateTextElement}\n                      />\n                    );\n                  case \"chart\":\n                    return <ChartElement key={i} {...elem} />;\n                }\n              })}\n            </React.Fragment>\n          </Background>\n        </Wrapper>\n      )}\n    />\n  );\n};\n\nconst Wrapper = styled.div`\n  overflow: visible;\n  &:focus {\n    outline: none;\n  }\n`;\nconst Background = styled.div`\n  user-select: none;\n  position: relative;\n  background: white;\n  transform-origin: top left;\n  width: 800px;\n  height: 450px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);\n`;\n"]},"metadata":{},"sourceType":"module"}