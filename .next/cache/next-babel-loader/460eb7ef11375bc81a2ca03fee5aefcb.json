{"ast":null,"code":"import { createTransport } from \"nodemailer\";\nimport { GMAIL_USER, GMAIL_PASS } from \"../../helpers/config\";\nimport { createSigninToken } from \"../../helpers/jwt\";\nexport const signin = async (_, {\n  email\n}) => {\n  const emailTransport = createTransport({\n    service: 'gmail',\n    auth: {\n      user: GMAIL_USER,\n      pass: GMAIL_PASS\n    }\n  });\n  const signin_token = await createSigninToken(email);\n  console.log({\n    signin_token\n  });\n  const res = await emailTransport.sendMail({\n    from: 'andreas.moller@gmail.com',\n    to: email,\n    subject: 'Sign in to Reports',\n    // Subject line\n    html: `\n      <a href=\"http://localhost:3000/api/auth?signin_token=${signin_token}\">Sign In</a>\n    ` // plain text body\n\n  });\n  console.log({\n    res\n  });\n  return \"OK\";\n};","map":{"version":3,"sources":["/Users/andreasmoller/code/reports/server/resolvers/Mutation/signin.ts"],"names":["createTransport","GMAIL_USER","GMAIL_PASS","createSigninToken","signin","_","email","emailTransport","service","auth","user","pass","signin_token","console","log","res","sendMail","from","to","subject","html"],"mappings":"AACA,SAASA,eAAT,QAAgC,YAAhC;AAGA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,sBAAvC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,MAAMC,MAAmC,GAAG,OAAOC,CAAP,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAAwB;AACzE,QAAMC,cAAc,GAAGP,eAAe,CAAC;AACrCQ,IAAAA,OAAO,EAAE,OAD4B;AAErCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAET,UADF;AAEJU,MAAAA,IAAI,EAAET;AAFF;AAF+B,GAAD,CAAtC;AAQA,QAAMU,YAAY,GAAG,MAAMT,iBAAiB,CAACG,KAAD,CAA5C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AACA,QAAMG,GAAG,GAAG,MAAMR,cAAc,CAACS,QAAf,CAAwB;AACxCC,IAAAA,IAAI,EAAE,0BADkC;AAExCC,IAAAA,EAAE,EAAEZ,KAFoC;AAGxCa,IAAAA,OAAO,EAAE,oBAH+B;AAGT;AAC/BC,IAAAA,IAAI,EAAG;6DACkDR,YAAa;KAL9B,CAMvC;;AANuC,GAAxB,CAAlB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,IAAAA;AAAF,GAAZ;AACA,SAAO,IAAP;AACD,CAtBM","sourcesContent":["import { MutationResolvers } from \"../../codegen/graphql\";\nimport { createTransport } from \"nodemailer\"\n\n\nimport { GMAIL_USER, GMAIL_PASS } from \"../../helpers/config\"\nimport { createSigninToken } from \"../../helpers/jwt\";\n\nexport const signin: MutationResolvers[\"signin\"] = async (_, { email }) => {\n  const emailTransport = createTransport({\n    service: 'gmail',\n    auth: {\n      user: GMAIL_USER,\n      pass: GMAIL_PASS\n    }\n  });\n\n  const signin_token = await createSigninToken(email)\n\n  console.log({ signin_token })\n  const res = await emailTransport.sendMail({\n    from: 'andreas.moller@gmail.com',\n    to: email,\n    subject: 'Sign in to Reports', // Subject line\n    html: `\n      <a href=\"http://localhost:3000/api/auth?signin_token=${signin_token}\">Sign In</a>\n    `// plain text body\n  })\n  console.log({ res })\n  return \"OK\"\n}"]},"metadata":{},"sourceType":"module"}