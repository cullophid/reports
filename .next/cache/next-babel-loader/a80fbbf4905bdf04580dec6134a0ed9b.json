{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { photon } from \"../../server/helpers/photon\";\nimport { createRefreshToken, verifySigninToken } from \"../../server/helpers/jwt\";\nexport default (async (req, res) => {\n  try {\n    const {\n      signin_token\n    } = req.query;\n    const {\n      email\n    } = await verifySigninToken(signin_token);\n    let [user] = await photon.users.findMany({\n      where: {\n        email\n      }\n    });\n    const refreshToken = await createRefreshToken(user);\n\n    if (!user) {\n      user = await photon.users.create({\n        data: {\n          email,\n          firstName: \"\",\n          lastName: \"\",\n          refreshToken\n        }\n      });\n    }\n\n    await photon.users.update({\n      where: {\n        id: user.id\n      },\n      data: {\n        refreshToken\n      }\n    });\n    res.setHeader(\"Set-Cookie\", `refresh_token=${refreshToken}; Path=/; HttpOnly`);\n    res.status(302).setHeader(\"Location\", \"/\");\n    res.send(\"\");\n  } catch (e) {\n    console.log({\n      e\n    });\n    res.status(500).send(_JSON$stringify(e));\n  }\n});","map":{"version":3,"sources":["/Users/andreasmoller/code/reports/pages/api/auth.ts"],"names":["photon","createRefreshToken","verifySigninToken","req","res","signin_token","query","email","user","users","findMany","where","refreshToken","create","data","firstName","lastName","update","id","setHeader","status","send","e","console","log"],"mappings":";AACA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,0BAAtD;AAEA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAmBF,GAAG,CAACG,KAA7B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAML,iBAAiB,CAACG,YAAD,CAAzC;AAEA,QAAI,CAACG,IAAD,IAAS,MAAMR,MAAM,CAACS,KAAP,CAAaC,QAAb,CAAsB;AACvCC,MAAAA,KAAK,EAAE;AACLJ,QAAAA;AADK;AADgC,KAAtB,CAAnB;AAKA,UAAMK,YAAY,GAAG,MAAMX,kBAAkB,CAACO,IAAD,CAA7C;;AAEA,QAAI,CAACA,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,MAAMR,MAAM,CAACS,KAAP,CAAaI,MAAb,CAAoB;AAC/BC,QAAAA,IAAI,EAAE;AACJP,UAAAA,KADI;AAEJQ,UAAAA,SAAS,EAAE,EAFP;AAGJC,UAAAA,QAAQ,EAAE,EAHN;AAIJJ,UAAAA;AAJI;AADyB,OAApB,CAAb;AAQD;;AAED,UAAMZ,MAAM,CAACS,KAAP,CAAaQ,MAAb,CAAoB;AACxBN,MAAAA,KAAK,EAAE;AACLO,QAAAA,EAAE,EAAEV,IAAI,CAACU;AADJ,OADiB;AAIxBJ,MAAAA,IAAI,EAAE;AACJF,QAAAA;AADI;AAJkB,KAApB,CAAN;AAQAR,IAAAA,GAAG,CAACe,SAAJ,CAAc,YAAd,EAA6B,iBAAgBP,YAAa,oBAA1D;AACAR,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBD,SAAhB,CAA0B,UAA1B,EAAsC,GAAtC;AACAf,IAAAA,GAAG,CAACiB,IAAJ,CAAS,EAAT;AAED,GAlCD,CAkCE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACAlB,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAAeC,CAAf,CAArB;AACD;AACF,CAvCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport { photon } from \"../../server/helpers/photon\"\nimport { createRefreshToken, verifySigninToken } from \"../../server/helpers/jwt\"\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  try {\n    const { signin_token } = req.query\n    const { email } = await verifySigninToken(signin_token as string);\n\n    let [user] = await photon.users.findMany({\n      where: {\n        email\n      }\n    })\n    const refreshToken = await createRefreshToken(user);\n\n    if (!user) {\n      user = await photon.users.create({\n        data: {\n          email,\n          firstName: \"\",\n          lastName: \"\",\n          refreshToken\n        }\n      })\n    }\n\n    await photon.users.update({\n      where: {\n        id: user.id\n      },\n      data: {\n        refreshToken\n      }\n    })\n    res.setHeader(\"Set-Cookie\", `refresh_token=${refreshToken}; Path=/; HttpOnly`)\n    res.status(302).setHeader(\"Location\", \"/\")\n    res.send(\"\");\n\n  } catch (e) {\n    console.log({ e })\n    res.status(500).send(JSON.stringify(e))\n  }\n}"]},"metadata":{},"sourceType":"module"}