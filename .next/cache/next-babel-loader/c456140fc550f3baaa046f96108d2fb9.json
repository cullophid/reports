{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/andreasmoller/code/reports/client/components/Crumbs.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport { colors } from \"../theme\";\nimport Link from \"next/link\";\nimport { Text, Title } from \"./Typography\";\nexport var Crumbs = _styled(\"nav\", {\n  target: \"e10se7y30\",\n  label: \"Crumbs\"\n})(\"display:grid;grid-auto-flow:column;grid-column-gap:8px;place-content:center start;& > *{position:relative;::before{content:\\\"/\\\";margin-right:8px;color:\", colors.text, \";}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZWFzbW9sbGVyL2NvZGUvcmVwb3J0cy9jbGllbnQvY29tcG9uZW50cy9DcnVtYnMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFnQyIsImZpbGUiOiIvVXNlcnMvYW5kcmVhc21vbGxlci9jb2RlL3JlcG9ydHMvY2xpZW50L2NvbXBvbmVudHMvQ3J1bWJzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IHsgY29sb3JzIH0gZnJvbSBcIi4uL3RoZW1lXCI7XG5pbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuaW1wb3J0IHsgVGV4dCwgVGl0bGUgfSBmcm9tIFwiLi9UeXBvZ3JhcGh5XCJcblxuXG5leHBvcnQgY29uc3QgQ3J1bWJzID0gc3R5bGVkLm5hdmBcbmRpc3BsYXk6Z3JpZDtcbmdyaWQtYXV0by1mbG93OiBjb2x1bW47XG5ncmlkLWNvbHVtbi1nYXA6IDhweDtcbnBsYWNlLWNvbnRlbnQ6IGNlbnRlciBzdGFydDtcblxuJiA+ICoge1xuICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6XCIvXCI7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICB9XG59XG5gXG5cbnR5cGUgQ3J1bWJMaW5rUHJvcHMgPSB7XG4gIGhyZWY6IHN0cmluZztcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn1cbmV4cG9ydCBjb25zdCBDcnVtYkxpbmsgPSAocHJvcHM6IENydW1iTGlua1Byb3BzKSA9PlxuICA8TGluayBocmVmPXtwcm9wcy5ocmVmfT5cbiAgICA8YT5cbiAgICAgIDxUZXh0IGNvbG9yPXtjb2xvcnMucHJpbWFyeX0gZm9udFNpemU9XCIxcmVtO1wiPntwcm9wcy5jaGlsZHJlbn08L1RleHQ+XG4gICAgPC9hPlxuICA8L0xpbms+XG5cblxuZXhwb3J0IGNvbnN0IENydW1iVGl0bGUgPSAocHJvcHM6IHsgY2hpbGRyZW46IFJlYWN0Tm9kZSB9KSA9PlxuICA8VGl0bGUgYXM9XCJoMVwiIGZvbnRTaXplPVwiMXJlbVwiPntwcm9wcy5jaGlsZHJlbn08L1RpdGxlPiJdfQ== */\"));\nexport var CrumbLink = function CrumbLink(props) {\n  return ___EmotionJSX(Link, {\n    href: props.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, ___EmotionJSX(Text, {\n    color: colors.primary,\n    fontSize: \"1rem;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children)));\n};\nexport var CrumbTitle = function CrumbTitle(props) {\n  return ___EmotionJSX(Title, {\n    as: \"h1\",\n    fontSize: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/andreasmoller/code/reports/client/components/Crumbs.tsx"],"names":["colors","Link","Text","Title","Crumbs","text","CrumbLink","props","href","primary","children","CrumbTitle"],"mappings":";;;;;AACA,SAASA,MAAT,QAAuB,UAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,cAA5B;AAGA,OAAO,IAAMC,MAAM;AAAA;AAAA;AAAA,+JAWNJ,MAAM,CAACK,IAXD,2gDAAZ;AAoBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SACvB,cAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,OAApB;AAA6B,IAAA,QAAQ,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CF,KAAK,CAACG,QAArD,CADF,CADF,CADuB;AAAA,CAAlB;AAQP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,KAAD;AAAA,SACxB,cAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,QAAQ,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,KAAK,CAACG,QAAtC,CADwB;AAAA,CAAnB","sourcesContent":["import styled from \"@emotion/styled\";\nimport { colors } from \"../theme\";\nimport { ReactNode } from \"react\";\nimport Link from \"next/link\";\n\nimport { Text, Title } from \"./Typography\"\n\n\nexport const Crumbs = styled.nav`\ndisplay:grid;\ngrid-auto-flow: column;\ngrid-column-gap: 8px;\nplace-content: center start;\n\n& > * {\n  position:relative;\n  ::before {\n    content:\"/\";\n    margin-right: 8px;\n    color: ${colors.text};\n  }\n}\n`\n\ntype CrumbLinkProps = {\n  href: string;\n  children: ReactNode;\n}\nexport const CrumbLink = (props: CrumbLinkProps) =>\n  <Link href={props.href}>\n    <a>\n      <Text color={colors.primary} fontSize=\"1rem;\">{props.children}</Text>\n    </a>\n  </Link>\n\n\nexport const CrumbTitle = (props: { children: ReactNode }) =>\n  <Title as=\"h1\" fontSize=\"1rem\">{props.children}</Title>"]},"metadata":{},"sourceType":"module"}