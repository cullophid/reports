{"ast":null,"code":"var _jsxFileName = \"/Users/andreasmoller/code/reports/client/components/Auth.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-fetch\";\nimport Router from \"next/router\";\nconst AuthContext = createContext(undefined);\n\nconst fetchAuthToken = async () => {\n  const res = await fetch(\"/api/refresh_token\");\n\n  if (res.status !== 200) {\n    Router.push(\"/login\");\n  }\n\n  const {\n    auth_token\n  } = await res.json();\n  console.log({\n    auth_token\n  });\n  return auth_token;\n};\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: authToken,\n    1: setAuthToken\n  } = useState(null);\n  useEffect(() => {\n    fetchAuthToken().then(setAuthToken);\n    const interval = setInterval(() => {\n      fetchAuthToken().then(setAuthToken);\n    }, 5 * 60 * 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: authToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children);\n};\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"sources":["/Users/andreasmoller/code/reports/client/components/Auth.tsx"],"names":["React","createContext","useContext","useState","useEffect","fetch","Router","AuthContext","undefined","fetchAuthToken","res","status","push","auth_token","json","console","log","AuthProvider","children","authToken","setAuthToken","then","interval","setInterval","clearInterval","useAuth"],"mappings":";;AAAA,OAAOA,KAAP,IAA4BC,aAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,SAAjE,QAAkF,OAAlF;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAKA,MAAMC,WAAW,GAAGN,aAAa,CAAgBO,SAAhB,CAAjC;;AAIA,MAAMC,cAAc,GAAG,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAML,KAAK,CAAC,oBAAD,CAAvB;;AACA,MAAIK,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,IAAAA,MAAM,CAACM,IAAP,CAAY,QAAZ;AACD;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAiB,MAAMH,GAAG,CAACI,IAAJ,EAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AACA,SAAOA,UAAP;AACD,CARD;;AAUA,OAAO,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AACnD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAgB,IAAhB,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,GACXY,IADH,CACQD,YADR;AAGA,UAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCd,MAAAA,cAAc,GACXY,IADH,CACQD,YADR;AAED,KAH2B,EAGzB,IAAI,EAAJ,GAAS,IAHgB,CAA5B;AAIA,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAMD,CArBM;AAuBP,OAAO,MAAMO,OAAO,GAAG,MAAMvB,UAAU,CAACK,WAAD,CAAhC","sourcesContent":["import React, { ReactChild, createContext, useContext, useState, useEffect } from \"react\"\nimport fetch from \"isomorphic-fetch\"\n\nimport Router from \"next/router\"\ntype Props = {\n  children: ReactChild\n}\n\nconst AuthContext = createContext<string | null>(undefined)\n\n\n\nconst fetchAuthToken = async () => {\n  const res = await fetch(\"/api/refresh_token\")\n  if (res.status !== 200) {\n    Router.push(\"/login\")\n  }\n  const { auth_token } = await res.json()\n  console.log({ auth_token })\n  return auth_token\n}\n\nexport const AuthProvider = ({ children }: Props) => {\n  const [authToken, setAuthToken] = useState<string | null>(null)\n  useEffect(() => {\n    fetchAuthToken()\n      .then(setAuthToken)\n\n    const interval = setInterval(() => {\n      fetchAuthToken()\n        .then(setAuthToken)\n    }, 5 * 60 * 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  return (\n    <AuthContext.Provider value={authToken}>\n      {children}\n    </AuthContext.Provider>\n  )\n\n}\n\nexport const useAuth = () => useContext(AuthContext)"]},"metadata":{},"sourceType":"module"}