{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/andreasmoller/code/reports/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { theme } from \"../client/theme\";\nimport { Apollo } from \"../client/components/Apollo\";\nconst Global = createGlobalStyle`\n  html, body, #__next {\n    margin:0;\n    padding:0;\n    height:100%;\n  }\n`;\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Apollo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(React.Fragment, null, __jsx(Global, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/andreasmoller/code/reports/pages/_app.js"],"names":["React","App","createGlobalStyle","ThemeProvider","theme","Apollo","Global","MyApp","render","Component","pageProps","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAGA,MAAMC,MAAM,GAAGJ,iBAAkB;;;;;;CAAjC;;AAOA,MAAMK,KAAN,SAAoBN,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,CADF,CADF;AAWD;;AA1BqB;;AA6BxB,eAAeH,KAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\"\nimport { theme } from \"../client/theme\"\nimport { Apollo } from \"../client/components/Apollo\"\n\n\nconst Global = createGlobalStyle`\n  html, body, #__next {\n    margin:0;\n    padding:0;\n    height:100%;\n  }\n`\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps } = this.props\n    return (\n      < Apollo >\n        <ThemeProvider theme={theme}>\n          <>\n            <Global />\n            <Component {...pageProps} />\n          </>\n        </ThemeProvider>\n      </Apollo >\n    )\n\n  }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}