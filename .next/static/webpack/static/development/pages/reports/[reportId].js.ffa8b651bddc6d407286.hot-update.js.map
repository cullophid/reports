{"version":3,"file":"static/webpack/static/development/pages/reports/[reportId].js.ffa8b651bddc6d407286.hot-update.js","sources":["webpack:///./client/components/Slide.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport useResizeListener from \"react-resize-aware\"\nimport { colors } from \"../theme\"\n\ntype SlideProps<ComponentType = React.Component> = {\n  children?: React.ReactNode\n  width: number\n  height: number\n  onClick?: (e: React.MouseEvent) => void\n  selected?: boolean\n}\nexport const Slide = (props: SlideProps) => {\n  const [resizeListener, sizes] = useResizeListener()\n  const { width, height, children } = props\n  const scale = sizes.width / width\n  return (\n    <Background\n      onClick={props.onClick}\n      scale={scale}\n      height={height}\n      selected={props.selected}\n      show={scale != 0}\n    >\n      {resizeListener}\n      <Content height={height} width={width} scale={scale}>\n        {children}\n      </Content>\n    </Background>\n  )\n}\ntype BackgroundProps = {\n  scale: number\n  height: number\n  selected: boolean\n  show: boolean\n}\nconst Background = styled.section<BackgroundProps>`\n  opacity:${p => p.show ? 1 : 0};\n  transition: 600ms opacity;\n  background: white;\n  position: relative;\n  justify-self: stretch;\n  overflow: hidden;\n  height: ${p => p.height * p.scale}px;\n  box-shadow: 0 ${p => 1 + 3 * p.scale}px ${p => 3 + 5 * p.scale}px\n    rgba(0, 0, 0, 0.4);\n\n  border: ${p =>\n    p.selected ? `1px solid  ${colors.primary}` : \"1px solid transparent\"};\n`\n\nconst Content = styled.div<{ scale: number; height: number; width: number }>`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: ${p => p.height}px;\n  width: ${p => p.width}px;\n  transform: scale(${p => p.scale});\n  transform-origin: top left;\n`"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}