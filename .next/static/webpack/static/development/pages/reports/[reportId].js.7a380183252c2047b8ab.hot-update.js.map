{"version":3,"file":"static/webpack/static/development/pages/reports/[reportId].js.7a380183252c2047b8ab.hot-update.js","sources":["webpack:///./client/Report/index.tsx","webpack:///./client/components/Slide.tsx","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/react-resize-aware/dist/index.js"],"sourcesContent":["import { useRouter } from \"next/router\"\nimport { useReportGetQuery } from \"../codegen/graphql\";\nimport styled from \"@emotion/styled\";\nimport { ErrorBox } from \"../components/ErrorBox\";\nimport { Crumbs, CrumbTitle, CrumbLink } from \"../components/Crumbs\";\nimport css from \"@emotion/css\";\nimport { Slide } from \"../components/Slide\";\n\nexport const ReportPage = () => {\n  const router = useRouter();\n\n  const reportId = router.query.reportId as string\n\n  console.log({ reportId })\n  const reportQuery = useReportGetQuery({\n    variables: {\n      id: reportId\n    }\n  })\n\n  const report = reportQuery.data && reportQuery.data.report\n\n  console.log(reportQuery)\n  return (\n    <Layout>\n      <Crumbs css={css`\n        position:absolute;\n        top: 16px;\n        left: 16px;\n      `}>\n        <CrumbLink href=\"/reports\">Reports</CrumbLink>\n        <CrumbTitle>{report ? report.title : \"...\"}</CrumbTitle>\n      </Crumbs>\n      {report &&\n        <Slide width={report.width} height={report.height}>\n\n        </Slide>\n      }\n      {reportQuery.error && <ErrorBox error={reportQuery.error} />}\n\n    </Layout>\n  )\n\n}\n\n\nconst Layout = styled.div`\n  display:grid;\n  height:100%;\n  place-content: center center;\n`","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport useResizeListener from \"react-resize-aware\"\nimport { colors } from \"../theme\"\n\ntype SlideProps<ComponentType = React.Component> = {\n  children?: React.ReactNode\n  width: number\n  height: number\n  onClick?: (e: React.MouseEvent) => void\n  selected?: boolean\n}\nexport const Slide = (props: SlideProps) => {\n  const [resizeListener, sizes] = useResizeListener()\n  const { width, height, children } = props\n  const scale = sizes.width / width\n  return (\n    <Background\n      onClick={props.onClick}\n      scale={scale}\n      height={height}\n      selected={props.selected}\n    >\n      {resizeListener}\n      <Content height={height} width={width} scale={scale}>\n        {children}\n      </Content>\n    </Background>\n  )\n}\ntype BackgroundProps = {\n  scale: number\n  height: number\n  selected: boolean\n}\nconst Background = styled.section<BackgroundProps>`\n  background: white;\n  position: relative;\n  justify-self: stretch;\n  overflow: hidden;\n  height: ${p => p.height * p.scale}px;\n  box-shadow: 0 ${p => 1 + 5 * p.scale}px ${p => 3 + 10 * p.scale}px\n    rgba(0, 0, 0, 0.4);\n\n  border: ${p =>\n    p.selected ? `1px solid  ${colors.primary}` : \"1px solid transparent\"};\n`\n\nconst Content = styled.div<{ scale: number; height: number; width: number }>`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: ${p => p.height}px;\n  width: ${p => p.width}px;\n  transform: scale(${p => p.scale});\n  transform-origin: top left;\n`","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","var e=require(\"react\"),t={display:\"block\",opacity:0,position:\"absolute\",top:0,left:0,height:\"100%\",width:\"100%\",overflow:\"hidden\",pointerEvents:\"none\",zIndex:-1},n=function(n){var r=n.onResize,i=e.useRef();return function(t,n){e.useEffect(function(){var e=t.current&&t.current.contentDocument.defaultView;return n(),e&&e.addEventListener(\"resize\",n),function(){e&&\"function\"==typeof e.removeEventListener&&e.removeEventListener(\"resize\",n)}},[])}(i,function(){return r(i)}),e.createElement(\"object\",{type:\"text/html\",style:t,data:\"about:blank\",ref:i,\"aria-hidden\":!0,\"aria-label\":\"resize-listener\",tabIndex:-1})},r=function(e){return{width:null!=e?e.offsetWidth:null,height:null!=e?e.offsetHeight:null}};module.exports=function(t){void 0===t&&(t=r);var i=e.useState({width:null,height:null}),u=i[0],o=i[1],l=e.useCallback(function(e){return o(t(e.current))},[t]);return[e.useMemo(function(){return e.createElement(n,{onResize:l})},[l]),u]};\n//# sourceMappingURL=index.js.map\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AADA;AADA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA;;;;;;;;A","sourceRoot":""}